<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Chat App</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
            background-color: #f4f4f9;
        }
        .container {
            width: 90%;
            max-width: 900px;
            background: white;
            border: 1px solid #ccc;
            border-radius: 10px;
            padding: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: none;
            flex-direction: row;
            height: 80vh;
        }
        .sidebar {
            width: 200px;
            border-right: 1px solid #ccc;
            padding-right: 10px;
            overflow-y: auto;
        }
        .sidebar h3 {
            margin: 0 0 10px;
        }
        .sidebar input {
            width: calc(100% - 20px);
            padding: 5px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .sidebar ul {
            list-style-type: none;
            padding: 0;
        }
        .sidebar li {
            padding: 10px;
            cursor: pointer;
            border-radius: 5px;
            margin-bottom: 5px;
            background: #f4f4f9;
            position: relative;
        }
        .sidebar li:hover {
            background: #ddd;
        }
        .sidebar .notification {
            position: absolute;
            top: 10px;
            right: 10px;
            width: 10px;
            height: 10px;
            background: red;
            border-radius: 50%;
            display: none;
        }
        .chat-section {
            flex: 1;
            display: flex;
            flex-direction: column;
        }
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-bottom: 10px;
            border-bottom: 1px solid #ccc;
        }
        .messages {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
        }
        .message {
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
            background: #e1f5fe;
        }
        .message.self {
            background: #c8e6c9;
            align-self: flex-end;
        }
        .input-container {
            display: flex;
            padding: 10px;
            border-top: 1px solid #ccc;
        }
        .input-container input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .input-container button {
            padding: 10px 15px;
            margin-left: 10px;
            border: none;
            border-radius: 5px;
            background: #007bff;
            color: white;
            cursor: pointer;
        }
        .logout-button {
            background: #dc3545;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
        }
        .login-container, .admin-container {
            width: 90%;
            max-width: 400px;
            background: white;
            border: 1px solid #ccc;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }
        .login-container h2, .admin-container h2 {
            margin-bottom: 20px;
        }
        .login-container input, .admin-container input {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .login-container button, .admin-container button {
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background: #007bff;
            color: white;
            cursor: pointer;
        }
        .admin-container button.register {
            background: #28a745;
            margin-top: 10px;
        }
        .user-list {
            margin-top: 20px;
            background: #f8f9fa;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .user-list ul {
            list-style-type: none;
            padding: 0;
        }
        .user-list li {
            margin-bottom: 5px;
        }
    </style>
</head>
<body>
    <div class="login-container" id="loginPanel">
        <h2>Login</h2>
        <input type="text" id="username" placeholder="Username" />
        <input type="password" id="password" placeholder="Password" />
        <button onclick="login()">Login</button>
    </div>

    <div class="admin-container" id="adminPanel" style="display: none;">
        <h2>Admin Panel</h2>
        <input type="text" id="newUsername" placeholder="New User Username" />
        <input type="password" id="newPassword" placeholder="New User Password" />
        <button class="register" onclick="registerUser()">Register User</button>
        <button class="logout-button" onclick="adminLogout()">Logout</button>
        <div class="user-list">
            <h3>Registered Users</h3>
            <ul id="userList"></ul>
        </div>
    </div>

    <div class="container chat-container" id="chatPanel">
        <div class="sidebar">
            <h3>Users</h3>
            <input type="text" id="searchUser" placeholder="Search users..." oninput="filterUsers()" />
            <ul id="registeredUsers"></ul>
        </div>
        <div class="chat-section">
            <div class="header">
                <h2>Chat App</h2>
                <button class="logout-button" onclick="chatLogout()">Logout</button>
            </div>
            <div class="messages" id="messages"></div>
            <div class="input-container">
                <input type="text" id="messageInput" placeholder="Type a message..." />
                <button onclick="sendMessage()">Send</button>
            </div>
        </div>
    </div>

    <script>
        const users = JSON.parse(localStorage.getItem('users')) || [
            { username: 'admin', password: 'admin123', isAdmin: true },
            { username: 'user1', password: 'user123', isAdmin: false }
        ];

        let currentChatUser = null;
        let unseenMessages = JSON.parse(localStorage.getItem('unseenMessages')) || {};

        function saveUsers() {
            localStorage.setItem('users', JSON.stringify(users));
        }

        function saveUnseenMessages() {
            localStorage.setItem('unseenMessages', JSON.stringify(unseenMessages));
        }

        function login() {
            const username = document.getElementById('username').value.trim();
            const password = document.getElementById('password').value.trim();

            const user = users.find(user => user.username === username && user.password === password);

            if (user) {
                localStorage.setItem('currentUser', JSON.stringify(user));
                document.getElementById('loginPanel').style.display = 'none';
                if (user.isAdmin) {
                    showAdminPanel();
                } else {
                    showChatPanel();
                }
            } else {
                alert('Invalid username or password');
            }
        }

        function registerUser() {
            const newUsername = document.getElementById('newUsername').value.trim();
            const newPassword = document.getElementById('newPassword').value.trim();

            if (newUsername === '' || newPassword === '') {
                alert('Please enter a username and password');
                return;
            }

            const existingUser = users.find(user => user.username === newUsername);
            if (existingUser) {
                alert('Username already exists');
                return;
            }

            users.push({ username: newUsername, password: newPassword, isAdmin: false });
            saveUsers();
            alert('User registered successfully');
            loadUserList();
        }

        function loadUserList() {
            const userList = document.getElementById('userList');
            userList.innerHTML = '';
            users.forEach(user => {
                if (!user.isAdmin) {
                    const li = document.createElement('li');
                    li.textContent = user.username;
                    userList.appendChild(li);
                }
            });
        }

        function showAdminPanel() {
            document.getElementById('adminPanel').style.display = 'block';
            loadUserList();
        }

        function showChatPanel() {
            document.getElementById('chatPanel').style.display = 'flex';
            loadRegisteredUsers();
            loadMessages();
        }

        function loadRegisteredUsers() {
            const registeredUsers = document.getElementById('registeredUsers');
            const currentUser = JSON.parse(localStorage.getItem('currentUser'));
            registeredUsers.innerHTML = '';
            users.forEach(user => {
                if (user.username !== currentUser.username && !user.isAdmin) {
                    const li = document.createElement('li');
                    li.textContent = user.username;
                    li.onclick = () => selectUser(user.username);
                    const notification = document.createElement('span');
                    notification.classList.add('notification');
                    if (unseenMessages[currentUser.username] && unseenMessages[currentUser.username][user.username]) {
                        notification.style.display = 'block';
                    }
                    li.appendChild(notification);
                    registeredUsers.appendChild(li);
                }
            });
        }

        function filterUsers() {
            const searchQuery = document.getElementById('searchUser').value.toLowerCase();
            const registeredUsers = document.getElementById('registeredUsers');
            const currentUser = JSON.parse(localStorage.getItem('currentUser'));
            registeredUsers.innerHTML = '';
            users.forEach(user => {
                if (user.username !== currentUser.username && !user.isAdmin && user.username.toLowerCase().includes(searchQuery)) {
                    const li = document.createElement('li');
                    li.textContent = user.username;
                    li.onclick = () => selectUser(user.username);
                    const notification = document.createElement('span');
                    notification.classList.add('notification');
                    if (unseenMessages[currentUser.username] && unseenMessages[currentUser.username][user.username]) {
                        notification.style.display = 'block';
                    }
                    li.appendChild(notification);
                    registeredUsers.appendChild(li);
                }
            });
        }

        function selectUser(username) {
            currentChatUser = username;
            if (unseenMessages[currentUser.username]) {
                delete unseenMessages[currentUser.username][username];
                saveUnseenMessages();
            }
            loadRegisteredUsers();
            loadMessages();
        }

        function loadMessages() {
            const currentUser = JSON.parse(localStorage.getItem('currentUser'));
            const messagesKey = currentChatUser ? `messages_${currentUser.username}_${currentChatUser}` : `messages_${currentUser.username}`;
            const messages = JSON.parse(localStorage.getItem(messagesKey)) || [];
            const messagesContainer = document.getElementById('messages');
            messagesContainer.innerHTML = '';
            messages.forEach(message => {
                const messageElement = document.createElement('div');
                messageElement.classList.add('message');
                if (message.self) {
                    messageElement.classList.add('self');
                }
                messageElement.textContent = message.text;
                messagesContainer.appendChild(messageElement);
            });
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const messageText = messageInput.value.trim();
            if (messageText === '') return;

            const currentUser = JSON.parse(localStorage.getItem('currentUser'));
            const messagesKey = currentChatUser ? `messages_${currentUser.username}_${currentChatUser}` : `messages_${currentUser.username}`;
            const messages = JSON.parse(localStorage.getItem(messagesKey)) || [];
            messages.push({ text: messageText, self: true });
            localStorage.setItem(messagesKey, JSON.stringify(messages));

            const recipientMessagesKey = `messages_${currentChatUser}_${currentUser.username}`;
            const recipientMessages = JSON.parse(localStorage.getItem(recipientMessagesKey)) || [];
            recipientMessages.push({ text: messageText, self: false });
            localStorage.setItem(recipientMessagesKey, JSON.stringify(recipientMessages));

            if (!unseenMessages[currentChatUser]) {
                unseenMessages[currentChatUser] = {};
            }
            unseenMessages[currentChatUser][currentUser.username] = true;
            saveUnseenMessages();

            messageInput.value = '';
            loadMessages();
        }

        function chatLogout() {
            localStorage.removeItem('currentUser');
            document.getElementById('chatPanel').style.display = 'none';
            document.getElementById('loginPanel').style.display = 'block';
        }

        function adminLogout() {
            localStorage.removeItem('currentUser');
            document.getElementById('adminPanel').style.display = 'none';
            document.getElementById('loginPanel').style.display = 'block';
        }

        window.onload = function() {
            const currentUser = JSON.parse(localStorage.getItem('currentUser'));
            if (currentUser) {
                document.getElementById('loginPanel').style.display = 'none';
                if (currentUser.isAdmin) {
                    showAdminPanel();
                } else {
                    showChatPanel();
                }
            } else {
                document.getElementById('loginPanel').style.display = 'block';
            }
        }
    </script>
</body>
</html>
